{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortFieldType","goodsFromServer","App","useState","NONE","sortField","setSortField","sortReverse","setSortReverse","sortedGoods","goods","newGoods","reverse","sort","good1","good2","LENGTH","length","ALPH","localeCompare","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,oBAAAA,E,iBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAAcI,MAAzD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACMC,EApCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAQ,YAAOD,GAErB,OAAKL,GAAaE,EACTI,EAASC,WAGdP,GACFM,EAASE,MAAK,SAACC,EAAOC,GACpB,OAAQV,GACN,KAAKL,EAAcgB,OACjB,OAAQT,EACJQ,EAAME,OAASH,EAAMG,OACrBH,EAAMG,OAASF,EAAME,OAE3B,KAAKjB,EAAckB,KACjB,OAAQX,EACJQ,EAAMI,cAAcL,GACpBA,EAAMK,cAAcJ,GAE1B,QACE,OAAO,MAKRJ,GAMaS,CAAenB,EAAiBI,EAAWE,GAE/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAcL,EAAckB,OAE5CM,QAAS,WACPlB,EAAaN,EAAckB,OAR/B,iCAcA,wBACEI,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAcL,EAAcgB,SAE5CQ,QAAS,WACPlB,EAAaN,EAAcgB,SAR/B,4BAcA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,WACPhB,GAAgBD,IARpB,sBAcEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,GAAe,GACfF,EAAaN,EAAcI,OAL/B,sBAaJ,6BACGK,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0a3e5a8e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortFieldType {\n  NONE = '',\n  ALPH = 'alphabetical',\n  LENGTH = 'length',\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  sortField: string,\n  sortReverse: boolean,\n) {\n  const newGoods = [...goods];\n\n  if (!sortField && sortReverse) {\n    return newGoods.reverse();\n  }\n\n  if (sortField) {\n    newGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortFieldType.LENGTH:\n          return (sortReverse)\n            ? good2.length - good1.length\n            : good1.length - good2.length;\n\n        case SortFieldType.ALPH:\n          return (sortReverse)\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return newGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortFieldType.NONE);\n  const [sortReverse, setSortReverse] = useState(false);\n  const sortedGoods = getSortedGoods(goodsFromServer, sortField, sortReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SortFieldType.ALPH },\n          )}\n          onClick={() => {\n            setSortField(SortFieldType.ALPH);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SortFieldType.LENGTH },\n          )}\n          onClick={() => {\n            setSortField(SortFieldType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !sortReverse },\n          )}\n          onClick={() => {\n            setSortReverse(!sortReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortReverse(false);\n              setSortField(SortFieldType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}